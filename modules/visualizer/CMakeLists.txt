IF (NOT VISUALIZER)
	SET(VISUALIZER 0 CACHE BOOL "Enable the visualizer module")
ENDIF()

IF (VISUALIZER)
	IF (OS_MACOSX)
		MESSAGE(FATAL_ERROR "The Allegro5 visualizer cannot work on MacOS X with the new modules architecture. Please disable it!")
	ENDIF()

	# Visualizer support via Allegro library
	PKG_CHECK_MODULES(ALLEGRO5 allegro-5>=5.0.11)
	PKG_CHECK_MODULES(ALLEGRO5_MAIN allegro_main-5>=5.0.11)
	PKG_CHECK_MODULES(ALLEGRO5_PRIMITIVES allegro_primitives-5)
	PKG_CHECK_MODULES(ALLEGRO5_FONT allegro_font-5)
	PKG_CHECK_MODULES(ALLEGRO5_TTF allegro_ttf-5)

	IF (NOT ALLEGRO5_FOUND)
		# Check alternative pkg-config naming
		PKG_CHECK_MODULES(ALLEGRO5 allegro-5.0>=5.0.11)
		PKG_CHECK_MODULES(ALLEGRO5_MAIN allegro_main-5.0>=5.0.11)
		PKG_CHECK_MODULES(ALLEGRO5_PRIMITIVES allegro_primitives-5.0)
		PKG_CHECK_MODULES(ALLEGRO5_FONT allegro_font-5.0)
		PKG_CHECK_MODULES(ALLEGRO5_TTF allegro_ttf-5.0)
	ENDIF()

	IF (NOT ALLEGRO5_FOUND OR NOT ALLEGRO5_MAIN_FOUND)
		MESSAGE(FATAL_ERROR "Allegro-5 main library not found!")
		RETURN()
	ENDIF()

	IF (NOT ALLEGRO5_PRIMITIVES_FOUND OR NOT ALLEGRO5_FONT_FOUND OR NOT ALLEGRO5_TTF_FOUND)
		MESSAGE(FATAL_ERROR "Allegro-5 primitives, font and ttf addons not found!")
		RETURN()
	ENDIF()

	SET(VISUALIZER_LIBS ${CAER_C_LIBS} ${ALLEGRO5_LIBRARIES} ${ALLEGRO5_MAIN_LIBRARIES})
	SET(VISUALIZER_INCDIRS ${CAER_INCDIRS} ${ALLEGRO5_INCLUDE_DIRS} ${ALLEGRO5_MAIN_INCLUDE_DIRS})
	SET(VISUALIZER_LIBDIRS ${CAER_LIBDIRS} ${ALLEGRO5_LIBRARY_DIRS} ${ALLEGRO5_MAIN_LIBRARY_DIRS})

	SET(VISUALIZER_LIBS ${VISUALIZER_LIBS} ${ALLEGRO5_PRIMITIVES_LIBRARIES} ${ALLEGRO5_FONT_LIBRARIES} ${ALLEGRO5_TTF_LIBRARIES})
	SET(VISUALIZER_INCDIRS ${VISUALIZER_INCDIRS} ${ALLEGRO5_PRIMITIVES_INCLUDE_DIRS} ${ALLEGRO5_FONT_INCLUDE_DIRS} ${ALLEGRO5_TTF_INCLUDE_DIRS})
	SET(VISUALIZER_LIBDIRS ${VISUALIZER_LIBDIRS} ${ALLEGRO5_PRIMITIVES_LIBRARY_DIRS} ${ALLEGRO5_FONT_LIBRARY_DIRS} ${ALLEGRO5_TTF_LIBRARY_DIRS})
	
	INCLUDE_DIRECTORIES(${VISUALIZER_INCDIRS})
	LINK_DIRECTORIES(${VISUALIZER_LIBDIRS})

	ADD_LIBRARY(visualizer SHARED visualizer.c visualizer_renderers.c visualizer_handlers.c)

	SET_TARGET_PROPERTIES(visualizer
		PROPERTIES
		PREFIX "caer_"
	)

	TARGET_LINK_LIBRARIES(visualizer ${VISUALIZER_LIBS})
	
	# Copy resources to build directory.
	FILE(COPY ${CMAKE_SOURCE_DIR}/ext/resources/LiberationSans-Regular.ttf DESTINATION ${CM_BUILD_DIR}/ext/resources)
	FILE(COPY ${CMAKE_SOURCE_DIR}/ext/resources/LiberationSans-Bold.ttf DESTINATION ${CM_BUILD_DIR}/ext/resources)

	# Install resources to a common system location.
	INSTALL(FILES ${CM_BUILD_DIR}/ext/resources/LiberationSans-Regular.ttf ${CM_BUILD_DIR}/ext/resources/LiberationSans-Bold.ttf DESTINATION ${CM_SHARE_DIR})
ENDIF()
