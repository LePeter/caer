caer
====

AER event-based framework, written in C, targeting embedded systems.

REQUIREMENTS:

cmake >= 2.6
gcc >= 4.9 or clang >= 3.6
libcaer >= 1.0.2
mini-xml (mxml) >= 2.7
allegro5 >= 5.0.1 (optional, only if using the visualizer)

INSTALLATION:

1) configure: 

$ cmake . 

One of the following options is required:
 -DDVS128=1             ... set dvs128 (for DVS128 model)
 -DDAVISFX2=1           ... set davisfx2 (for DAVIS240A/B/C models)
 -DDAVISFX3=1           ... set davisfx3 (for FX3 platform models)

Options (non required): 
 -DENABLE_VISUALIZER=1  ... enable visualizer module
 -DENABLE_NET_STREAM=1  ... enable tcp server for sending data over network

Extra modules:
 -DENABLE_IMAGESTREAMERVISUALIZER=1 ... This module produces images by accumulating a fixed number 
					of spikes. (press "r" to start recording png and "s" to stop)
					This module depends on the visualizer module (ie. it requires -DENABLE_VISUALIZER=1)
					This module can be configured by editing the file: 
					 "module/imagescreamervisualizer/imagescreamervisualizer.h"
					parameters:
						numSpikes 7000 //number of spikes that are accumulated per image
				        control keys: "p" to save images as _pos_id.png
					              "n" to save images as _neg_id.png
					              "t" to save iamges as _testing_id.png
					              "s" stop recording images, but keep displaying them
						
 -DENABLE_CAFFEINTERFACE=1          ... Caffe Interface to cAER, deep learning framework - https://github.com/BVLC/caffe - 
					This module depends on the visualizer module and on the imagestreamer 
					(ie. it requires -DENABLE_VISUALIZER=1 and -DENABLE_IMAGESTREAMERVISUALIZER=1)
					It also requires caffe installed as well as boost/opencv/protobuffer (same as caffe)
					You can load deep networks that have been trained with caffe (as alexnet/caffenet/vgg etc.)
					This module can be configured by editing the file: 
					 "module/caffeinterface/settings.h" 
					-DCPU_ONLY=1 to use caffe framework with CPU only (ie. no GPU)

2) build:

$ make

3) install:

$ make install

USAGE:

$ caer-bin (see docs/ for more info on how to use cAER)
$ caer-ctl (run-time settings control program, optional)
